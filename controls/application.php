<?php
include_once 'functions/xml2array.php';
class Application
{
	var $room;
	var $userCount;
	var $modCount;
	var $roomInfo;
	
	function Application()
	{
		if(isset($this->room))
		{
			$this->roomInfo = $this->getRoomInfo();
		}
	}
	
	/**
	 * Set the room to view
	 * @param string $roomName
	 * @return boolean
	 */
	function setRoom($roomName)
	{
		if(!empty($roomName))
		{
			$this->room = $roomName;
			return true;
		}
		else
		{
			return false;
		}
	}
	
	function roomExists($room)
	{
		
	}
	
	
	/**
	 * Find the XML info file for a selected room, then parse the file and return as an array
	 * 
	 * @param string $room
	 * @return array|boolean(false) if fail
	 */
	function parseRoomXML($room)
	{
		// The external xml file with room info
		$xmlFileURL =  "http://tinychat.apigee.com/".$room.".xml";
			
		// Turn file into a string
		$xmlContents = file_get_contents($xmlFileURL);
		
		// If the xml file exists, convert it to an array
		if($xmlContents)
		{
			// Generate an array out of the xml string
			$xmlInfoArray = json_decode(json_encode((array)simplexml_load_string($xmlContents)),1);
			return $xmlInfoArray;
		}
		
		// Return false if fail
		return false;
		
	}
	
	/**
	 * 
	 * @return mixed|boolean
	 */
	function getRoomInfo($dynamicCams = false)
	{
		if(isset($this->room))
		{
			// The external xml file with room info
			$xmlFileURL =  "http://tinychat.apigee.com/".$this->room.".xml";
			
			// Turn file into a string
			$xmlContents = file_get_contents($xmlFileURL);
			
			// Generate an array out of the xml string
			$xmlInfoArray = json_decode(json_encode((array)simplexml_load_string($xmlContents)),1);
			if($xmlInfoArray != null)
			{
				if($dynamicCams)
				{
					$xmlInfoArray = $this->setCamPics($xmlInfoArray);
				}
				return $xmlInfoArray;
			}
		}
		return false;
	}

	/**
	 * Internal function to set the cam pics to be 4 separate pics rather than just 1
	 * 
	 * @param array $roomInfoArray
	 * @return boolean|array:
	 */
	function setCamPics($roomInfoArray)
	{
		/*
		 * For Each of 'pic' array value, create an array in it's place with 4 cam pics (numbered as /<1-4>/<room>-<username>.jpg)
		 */
		
		// Determin whether the pic array exists
		
			// for each pic value (which are the pic urls), create an array of 4 urls for 
			// the 4 different cam pics that are generated by TC
			if(isset($roomInfoArray['pic']))
			{
				if(isset($roomInfoArray['@attributes']['broadcaster_count']) && $roomInfoArray['@attributes']['broadcaster_count'] == 1)
				{
					// Get the username to be used ot build the URL
					$subjectName = $roomInfoArray['names'];
				
					// Declare the array to hold the 4 pic urls
					$roomInfoArray['pic'] = array();
					$picsArray = array();
				
					// itterate 4 times to create 4 separate urls
					// Then push each of them into the previously declared array
					for($i = 1; $i <= 4; $i++)
					{
					$picUrl = "http://upload.tinychat.com/i/$i/" . $this->room . "-" . $roomInfoArray['names'] . ".jpg";
							array_push($picsArray, $picUrl);
					}
				
					// Set the value of the pic array entry as the array of urls
					array_push($roomInfoArray['pic'], $picsArray);
				}
				else
				{
					foreach($roomInfoArray['pic'] AS $key => $picUrl)
					{
						if(!empty($picUrl))
						{
							// Get the username to be used ot build the URL
							$subjectName = $roomInfoArray['names'][$key];
							
							// Declare the array to hold the 4 pic urls
							$picsArray = array();
							
							// itterate 4 times to create 4 separate urls
							// Then push each of them into the previously declared array
							for($i = 1; $i <= 4; $i++)
							{
							$picUrl = "http://upload.tinychat.com/i/$i/" . $this->room . "-" . $subjectName . ".jpg";
							array_push($picsArray, $picUrl);
							}
							
							// Set the value of the pic array entry as the array of urls
							$roomInfoArray['pic'][$key] = $picsArray;
						}
					}
				}
			}
			
			
			return $roomInfoArray;
	}
	
	function getCamPics($format = "json")
	{
		$camPicArray = array();
	}
	
	
	function getUsers()
	{
		
	}
};

$application = new Application;